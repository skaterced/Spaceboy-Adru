#ifndef _BACKGROUND_
#define _BACKGROUND_

#include "globals.h"

#define NB_STARS_PER_LAYER 1000 //per layer...
#define NB_LAYERS 3

#define MAP_WIDTH 2000
#define MAP_HEIGHT 1000

const unsigned char PROGMEM picture[] =
{
// width, height,
//128, 48,
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x1f, 0x0f, 0x07, 0x07, 0x03, 0x03, 0x03, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x03, 0x03, 0x07, 0x07, 0x07, 0x0f, 0x1f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x07, 0x03, 0x03, 0x03, 0x83, 0xe3, 0xe3, 0x63, 0x03, 0x03, 0x03, 0x03, 0x03, 0x87, 0xff, 0x1f, 0x07, 0x03, 0x03, 0x03, 0x83, 0xf3, 0xff, 0x7f, 0x7f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x7f, 0xff, 0xff, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0xff, 0xff, 0xff, 0x7f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0xff, 0xff, 0x7f, 0x7f, 0x7f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x7f, 0x3f, 0x3f, 0x3f, 0xbf, 0xff, 0x7f, 0x7f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xe1, 0xc0, 0xc0, 0xc0, 0xe0, 0xf0, 0xfc, 0xfe, 0xfe, 0xfe, 0xfe, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff, 0x7f, 0x1f, 0x07, 0x00, 0x00, 0x00, 0xc0, 0xe0, 0xe0, 0xf1, 0xf1, 0xf0, 0xf0, 0xf0, 0xf8, 0xfc, 0x3c, 0x1f, 0x03, 0x00, 0x00, 0x00, 0xc0, 0x70, 0x1e, 0x0f, 0x0f, 0x05, 0x04, 0x44, 0x46, 0x46, 0x02, 0x02, 0x00, 0x00, 0x00, 0xc0, 0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x01, 0x81, 0xc0, 0xe0, 0xf0, 0xfc, 0x0e, 0x03, 0x01, 0x00, 0x00, 0x00, 0x24, 0x24, 0x26, 0x26, 0x20, 0xa0, 0xe0, 0xe0, 0x70, 0x1f, 0x03, 0x00, 0x00, 0x00, 0xc0, 0xf0, 0xf8, 0xfc, 0xfc, 0x3c, 0x3e, 0x3f, 0x30, 0x20, 0x00, 0x00, 0x00, 0x04, 0x04, 0x9c, 0xfc, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x3f, 0x1f, 0x07, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xe0, 0xf0, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x3f, 0x3f, 0x3f, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3c, 0x3f, 0x3f, 0x7e, 0xfe, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0x06, 0x07, 0x0f, 0x0f, 0x07, 0x80, 0x80, 0x80, 0xc0, 0xe0, 0xf8, 0xfc, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3e, 0x3e, 0x3e, 0x3c, 0x3c, 0xbc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfe, 0xff, 0xff, 0xff, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfc, 0xfe, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x1f, 0x07, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x38, 0x3c, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x03, 0x00, 0x00, 0x00, 0x00, 0x18, 0x1e, 0x1e, 0x0e, 0x00, 0x80, 0x80, 0xc0, 0xe0, 0xf8, 0x7f, 0x4f, 0x47, 0x67, 0x63, 0x23, 0x23, 0x03, 0x03, 0x03, 0x03, 0x07, 0xc7, 0xff, 0x3f, 0x1f, 0x0f, 0x0f, 0x07, 0x83, 0xc3, 0xc3, 0xc3, 0xc3, 0xc3, 0xc7, 0xff, 0x3f, 0x07, 0x01, 0x00, 0x00, 0x00, 0x10, 0x18, 0x0f, 0x07, 0x03, 0xc3, 0xc3, 0xe3, 0xf3, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcf, 0xc3, 0xc0, 0xc0, 0xc0, 0xc0, 0xf0, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xc1, 0xc0, 0xc0, 0xc0, 0xc4, 0xc4, 0xc4, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xf0, 0xff, 0xff, 0xe0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc7, 0xc7, 0xc7, 0xe3, 0xf3, 0xff, 0xc7, 0xc0, 0xc0, 0xc0, 0xc0, 0xe0, 0xfe, 0xf0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xeb, 0xe3, 0xff, 0xb3, 0xaf, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3, 0x9d, 0xbe, 0xbe, 0xbe, 0xc7, 0xab, 0xab, 0xa5, 0xbd, 0xcf, 0xb7, 0x97, 0xc1, 0xbf, 0x83, 0xf7, 0xfb, 0xff, 0x85, 0xff, 0xcf, 0xb7, 0xb7, 0xff, 0xff, 0xff, 0x80, 0xf9, 0xf3, 0xf9, 0x80, 0xff, 0xdf, 0xab, 0xab, 0xc7, 0xbf, 0x83, 0xf7, 0xfb, 0xff, 0xfb, 0xc1, 0xbb, 0xff, 0x85, 0xff, 0x83, 0xf7, 0xfb, 0x87, 0xff, 0xff, 0xff, 0xff, 0xff, 
};

void mapCenter(){
  mapCoord.x=MAP_WIDTH/2-64;
  mapCoord.y=MAP_HEIGHT/2-32;
}

void drawStars(int x, int y, int RandSeed){ //camera X,Y
  ab.drawBitmap(0,0,picture,128,48,WHITE);
  randomSeed(RandSeed);
  for (int i=0; i<NB_STARS_PER_LAYER ; i++){
    int tempX=random(MAP_WIDTH)+x;
    int tempY=random(MAP_HEIGHT)+y;
    if (0<tempX && tempX<MAP_WIDTH && 0<tempY && tempY<MAP_HEIGHT)
      ab.drawPixel(tempX,tempY);
  }
}
/*
void drawStars(int x, int y){ //camera X,Y
  for (int j=0; j<NB_LAYERS; j++) {
    randomSeed(3309*(j+1));
    for (int i=0; i<NB_STARS_PER_LAYER*j*j ; i++){
      int tempX=random(MAP_WIDTH*j)-x*j;
      int tempY=random(MAP_HEIGHT*j)-y*j;
      if (0<tempX && tempX<MAP_WIDTH && 0<tempY && tempY<MAP_HEIGHT)
        ab.drawPixel(tempX,tempY);
    }
  }
}*/

void drawVecLine(vec2 A, vec2 B){
  ab.drawLine(A.x,A.y,B.x,B.y);
}

#endif
